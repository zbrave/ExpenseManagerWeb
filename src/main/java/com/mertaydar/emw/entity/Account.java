package com.mertaydar.emw.entity;
// Generated 19.Tem.2017 22:36:54 by Hibernate Tools 5.2.3.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Account generated by hbm2java
 */
@Entity
@Table(name = "account", catalog = "expense_manager")
public class Account implements java.io.Serializable {

	private AccountId id;
	private House house;
	private float total;

	private Set<Item> items = new HashSet<Item>(0);

    public Account() {
    }

	public Account(AccountId id, House house, float total) {
		this.id = id;
		this.house = house;
		this.total = total;
	}

	public Account(AccountId id, House house, float total, Set<Item> items) {
       this.id = id;
       this.house = house;
       this.total = total;
       this.items = items;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="id", column=@Column(name="id", nullable=false) ), 
        @AttributeOverride(name="houseId", column=@Column(name="house_id", nullable=false) ) } )
    public AccountId getId() {
        return this.id;
    }

	public void setId(AccountId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "house_id", nullable = false, insertable = false, updatable = false)
	public House getHouse() {
		return this.house;
	}

	public void setHouse(House house) {
		this.house = house;
	}

	@Column(name = "total", nullable = false, precision = 12, scale = 0)
	public float getTotal() {
		return this.total;
	}

	public void setTotal(float total) {
		this.total = total;
	}

@OneToMany(fetch=FetchType.LAZY, mappedBy="account")
    public Set<Item> getItems() {
        return this.items;
    }

	public void setItems(Set<Item> items) {
        this.items = items;
    }




}
